
s

^[[Abryan@svrccom1:~/NodeServer$ sudo gdrive list --query "name contains 'Server'"
[sudo] password for bryan: 
Id                             Name                           Type   Size      Created
0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU   Server.js                      bin    6.6 KB    2017-04-28 16:41:39
0B6RqmB4e_Z2kUVJ6SlZTNnBfS1k   Server.js                      bin    6.7 KB    2017-04-29 21:42:03
0B6RqmB4e_Z2kd2hoU1ZBcWhaTlk   serverGuarida                  dir              2017-04-28 17:16:56
0B6RqmB4e_Z2kTG1qYWpERVp0MVk   Server Cheat Sheet.docx        bin    13.6 KB   2017-04-27 18:54:02
0B6RqmB4e_Z2kamxJTnVkV005d2s   Server.js                      bin    658.0 B   2017-04-09 12:01:32
0B6RqmB4e_Z2keFU1M1lGLUxUYmM   server.js                      bin    30.2 KB   2017-04-09 12:12:26
0B6RqmB4e_Z2kaDVlYzZQWlF3T1U   server.js                      bin    16.9 KB   2017-04-09 12:10:02
0B6RqmB4e_Z2kSVMyN1dRSF9YeVk   server                         dir              2017-04-09 12:01:05
0ByiVUjlXXX0mVjFCQWhOU1VZcDA   hhvm-server.ini                bin    284.0 B   2017-03-15 22:12:38
0ByiVUjlXXX0mUTF3Z2VjdDNVU2s   server.php                     bin    800.0 B   2017-03-15 22:12:38
0ByiVUjlXXX0mOHpjVFZEOThZUEU   hhvm-server.ini                bin    284.0 B   2017-03-15 22:12:31
0ByiVUjlXXX0mNHlZTUpEdTJLbkE   ServerErrorHttpException.php   bin    769.0 B   2017-03-15 22:01:11
0ByiVUjlXXX0mOFBXdmdKck0tTFk   ServerRequestInterface.php     bin    10.1 KB   2017-03-15 21:58:03
0ByiVUjlXXX0mc1pKX0NDSDFQVTA   ServerRequest.php              bin    9.4 KB    2017-03-15 21:57:34
bryan@svrccom1:~/NodeServer$ ^C
bryan@svrccom1:~/NodeServer$ sudo See[K[K[Kgdrive download -- [K[K[K-f 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU
Downloading Server.js -> Server.js
                                                  6.6 KB                                                  6.6 KB                                                  Downloaded 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU at 6.6 KB/s, total 6.6 KB
bryan@svrccom1:~/NodeServer$ nodejs Server.js 
Listening to port 8080
events.js:160
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::8080
    at Object.exports._errnoException (util.js:1018:11)
    at exports._exceptionWithHostPort (util.js:1041:20)
    at Server._listen2 (net.js:1258:14)
    at listen (net.js:1294:10)
    at Server.listen (net.js:1390:5)
    at EventEmitter.listen (/home/bryan/NodeServer/node_modules/express/lib/application.js:618:24)
    at Object.<anonymous> (/home/bryan/NodeServer/Server.js:193:5)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:390:7)
    at startup (bootstrap_node.js:150:9)
    at bootstrap_node.js:505:3
bryan@svrccom1:~/NodeServer$ sudo nano Server.js 
(B)0[?1049h[1;61r[m[4l[?1h=[?1h=[?1h=[39;49m[?25l[39;49m[m[H[J[59;98H[0;7m[ Reading File ][56A[m[59;97H[0;7m[ Read 194 lines ][56A[m[34h[?25h[H[39;49m[0;7m  GNU nano 2.5.3                                                          File: Server.js                                                                                                                          [3;1H[0m[32mvar[39m[m express = require([0;1m[33m"express"[39m[m);[1B[32mvar[39m[m app = express();[1B[32mvar[39m[m bodyParser = require([0;1m[33m"body-parser"[39m[m);[1B[32mvar[39m[m router = express.Router();[1B[32mvar[39m[m fs = require([0;1m[33m'fs'[39m[m);[2B[32mvar[39m[m mongoOp     =   require([0;1m[33m"./model/mongo"[39m[m);[2Bapp.use(bodyParser.json());[1Bapp.use(bodyParser.urlencoded({[0;1m[33m"extended"[39m[m: false}));[2B[0;1m[34m//Permissions to access server (CORS)[1B[39m[mapp.use([32mfunction[39m[m (req, res, next) {[16;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Origin'[39m[m, [0;1m[33m'http:[34m//localhost:8080');[18;5H[39m[mres.setHeader([0;1m[33m'Access-Control-Allow-Methods'[39m[m, [0;1m[33m'GET, POST, OPTIONS, PUT, PATCH, DELETE'[39m[m);[20;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Headers'[39m[m, [0;1m[33m'X-Requested-With, content-type'[39m[m);[22;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Credentials'[39m[m, true);[24;5Hnext();[1B});[2Brouter.get([0;1m[33m"/"[39m[m, [32mfunction[39m[m(req, res){[1B[0;1m[34m// res.json({"error": false, "message": "Hola chamacos!"});[1B[0m[32mvar[39m[m str = fs.readFileSync([0;1m[33m'./public/index.html'[35m,[33m'utf-8'[39m[m);[30;3Hres.send(str);[1B});[2B[0;1m[34m//route() will allow you to use same path for different HTTP operation.[1B//So if you have same URL but with different HTTP OP such as POST,GET etc[1B//Then use route() to remove redundant code.[3B[39m[mrouter.route([0;1m[33m"/admin"[39m[m)[39;5H.get([32mfunction[39m[m(req,res){[40;9H[32mvar[39m[m response = {};[41;9HmongoOp.find({},[32mfunction[39m[m(err,data){[42;9H[0;1m[34m// Mongo command to fetch all data from collection.[43;13H[33mif[39m[m(err) {[44;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[45;13H} [0;1m[33melse[39m[m {[46;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[47;13H}[1Bres.json(data);[49;9H});[50;5H})[1B.post([32mfunction[39m[m(req,res){[52;9H[32mvar[39m[m db = [0;1m[33mnew[39m[m mongoOp();[53;9H[32mvar[39m[m response = {};[54;9H[0;1m[34m// fetch email and password from REST request.[55;9H// Add strict validation when you use this in Production.[56;9H[39m[mdb.username = req.body.username;[57;9H[0;1m[34m// Hash the password using SHA1 algorithm.[58;9H[39m[mdb.password =  require([0;1m[33m'crypto'[39m[m)[2B[0;7m^G[m Get Help[6C[0;7m^O[m Write Out     [0;7m^W[m Where Is[6C[0;7m^K[m Cut Text[6C[0;7m^J[m Justify[7C[0;7m^C[m Cur Pos[7C[0;7m^Y[m Prev Page     [0;7mM-\[m First Line   [0;7mM-W[m WhereIs Next [0;7m^^[m Mark Text     [0;7mM-}[m Indent Text  [0;7mM-U[m Undo[1B[0;7m^X[m Exit[61;18H[0;7m^R[m Read File     [0;7m^\[m Replace[7C[0;7m^U[m Uncut Text    [0;7m^T[m To Spell[6C[0;7m^_[m Go To Line    [0;7m^V[m Next Page     [0;7mM-/[m Last Line    [0;7mM-][m To Bracket   [0;7mM-^[m Copy Text    [0;7mM-{[m Unindent Text[0;7mM-E[m Redo[58A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[1B[1B[31B[K[30A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;27H.createHash([0;1m[33m'sha1'[39m[m)[31;27H.update(req.body.password)[32;27H.digest([0;1m[33m'base64'[39m[m);[33;9Hdb.name = req.body.name;[34;9Hdb.save([32mfunction[39m[m(err){[35;9H[0;1m[34m// save() will run insert() command of MongoDB.[36;9H// it will add new data in collection.[37;13H[33mif[39m[m(err) {[38;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error adding data"[39m[m};[39;13H} [0;1m[33melse[39m[m {[40;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data added"[39m[m};[41;13H}[1Bres.json(response);[43;9H});[44;5H});[2Brouter.route([0;1m[33m"/admin/:id"[39m[m)[47;5H.get([32mfunction[39m[m(req,res){[48;9H[32mvar[39m[m response = {};[49;9HmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[50;9H[0;1m[34m// This will run Mongo Query to fetch data based on ID.[51;13H[33mif[39m[m(err) {[52;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[53;13H} [0;1m[33melse[39m[m {[54;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[55;13H}[1Bres.json(response);[57;5H})[1B})[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;5H.put([32mfunction[39m[m(req,res){[31;9H[32mvar[39m[m response = {};[32;9H[0;1m[34m// first find out record exists or not[33;9H// if it does then update the record[34;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[35;13H[0;1m[33mif[39m[m(err) {[36;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[37;13H} [0;1m[33melse[39m[m {[38;13H[0;1m[34m// we got data from Mongo.[39;13H// change it accordingly.[40;17H[33mif[39m[m(req.body.userEmail !== undefined) {[41;21H[0;1m[34m// case where email needs to be updated.[42;21H[39m[mdata.userEmail = req.body.userEmail;[43;17H}[1B[0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[45;21H[0;1m[34m// case where password needs to be updated[46;21H[39m[mdata.userPassword = req.body.userPassword;[47;17H}[1B[0;1m[34m// save the data[49;17H[39m[mdata.save([32mfunction[39m[m(err){[50;21H[0;1m[33mif[39m[m(err) {[51;25Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[52;21H} [0;1m[33melse[39m[m {[53;25Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[54;21H}[1Bres.json(response);[56;17H})[57;13H}[58;9H});[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[28;33r[28;1H[2L[1;61r[3;9H[0;1m[34m// first find out record exists or not[4;9H// if it does then update the record[5;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[6;9H    [0;1m[33mif[39m[m(err) {[K[7;16H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[8;13H} [0;1m[33melse[39m[m {[K[9;13H[0;1m[34m// we got data from Mongo.[39m[m[K[10;13H[0;1m[34m// change it accordingly.[11;17H[33mif[39m[m(req.body.userEmail !== undefined) {[K[12;20H[1K [0;1m[34m// case where email needs to be updated.[13;20H[39m[m[1K data.userEmail = req.body.userEmail;[14;16H[1K }[1B[1K [0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[16;21H[0;1m[34m// case where password needs to be updated[17;20H[39m[m[1K data.userPassword = req.body.userPassword;[18;16H[1K }[K[1B[1K [0;1m[34m// save the data[20;16H[39m[m[1K data.save([32mfunction[39m[m(err){[K[21;20H[1K [0;1m[33mif[39m[m(err) {[K[22;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[23;17H    } [0;1m[33melse[2C[39m[m[K[24;24H[1K response = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[25;17H    }[K[1B[1K res.json(response);[27;13H    })[K[28;13H}[29;9H});[2B    .[0;1m[33mdelete[39m[m([32mfunction[39m[m(req,res){[32;5H    [32mvar[39m[m response = {}; [33;9H[0;1m[34m// find the data[39m[m  [38;13H    [0;1m[34m// data exists, remove it.[39;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[40;17H    [0;1m[33mif[39m[m(err[25P[41;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[42;21H} [0;1m[33melse[39m[m {[K[43;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[44;17H    }[K[1Bres.json(response);[K[46;17H});[K[47;13H}[K[48;9H})[K[49;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[54;5H.get([32mfunction[39m[m(req,res){[55;9H[32mvar[39m[m response = {};[K[56;9HmongoOp.find({},[32mfunction[39m[m(err,data){[57;9H[0;1m[34m// Mongo command to fetch all data from collection.[58;9H[39m[m    [0;1m[33mif[39m[m(err) {[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[28;41r[28;1H[6L[1;61r[3;9H[32mvar[39m[m response = {};[K[4;12H[0;1m[34mfind the data[39m[m[K[9;13H    [0;1m[34m// data exists, remove it.[10;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[11;17H    [0;1m[33mif[39m[m(err[25P[12;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[13;21H} [0;1m[33melse[39m[m {[K[14;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[15;17H    }[K[1Bres.json(response);[K[17;17H});[K[18;13H}[K[19;9H})[K[20;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[25;5H.get([32mfunction[39m[m(req,res){[26;9H[32mvar[39m[m response = {};[K[27;9HmongoOp.find({},[32mfunction[39m[m(err,data){[28;9H[0;1m[34m// Mongo command to fetch all data from collection.[29;13H[33mif[39m[m(err) {[30;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[31;13H} [0;1m[33melse[39m[m {[32;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[33;13H}[1Bres.json(data);[3B[K[1Brouter.route([0;1m[33m"/reservas/:fecha/:horaEntrada"[39m[m)[39;9H.get([32mfunction[39m[m(req, res) {[40;16H[1K [32mvar[39m[m response = {};[K[41;13H    mongoOp.find( { fecha: req.params.fecha, horaEntrada: req.params.horaEntrada},[32mfunction[39m[m(err, data) {[42;17H[0;1m[34m//Mongo Query to fecth data based on Starting time.[43;17H[33mif[39m[m(err) {[K[44;21H    response = {[0;1m[33m"error"[39m[m: true, [0;1m[33m"message"[39m[m: [0;1m[33m"Error"[39m[m};[45;17H} [0;1m[33melse[39m[m {[K[1B[1K response = {[0;1m[33m"error"[39m[m: false, [0;1m[33m"message"[39m[m: data};[1B[47;13H    }[1B[1K res.json(response);[49;5H    })[1B});[1B[K[1Brouter.route([0;1m[33m"/reservas/:id/:horaEntrada/:fecha"[39m[m)[1B.put([32mfunction[39m[m(req,res){  [54;5H[32mvar[39m[m response = {};[K[55;5H[0;1m[34m// find the data[39m[m[K[56;5HmongoOp.find({ id: req.params.id, fecha: req.params.fecha, horaEntrada: req.params.horaEntrada },[32mfunction[39m[m(err,data){[57;9H[0;1m[33mif[39m[m(err) {[K[58;13Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[3;59r[3;1H[29M[1;61r[30;9H} [0;1m[33melse[39m[m {[31;13H[0;1m[34m// data exists, remove it.[32;13H[39m[mdata.status = [0;1m[33m'Cancelado'[39m[m;[33;13H[0;1m[34m// save the data[34;17H[39m[mdata.save([32mfunction[39m[m(err){[35;21H[0;1m[33mif[39m[m(err) {[36;25Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[37;21H} [0;1m[33melse[39m[m {[38;25Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[39;21H}[1Bres.json(response);[41;17H});[42;9H}[43;5H})[1B});[4Bapp.use([0;1m[33m'/'[39m[m, router);[2Bapp.listen(8080);[1Bconsole.log([0;1m[33m"Listening to port 8080"[39m[m);[21A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1BMMMMMMM[1B});[1;202H[0;7mModified[44;3H[m M  });[16B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                                                                                                                                       [60;1H Y[m Yes[K[1B[0;7m N[m No  [61;17H[0;7m^C[m Cancel[K[59;62H[0;7mFile Name to Write: Server.js                               [1B^G[m Get Help[60;43H[0;7mM-D[m DOS Format[60;85H[0;7mM-A[m Append[60;127H[0;7mM-B[m Backup File[1B[0;7m^C[m Cancel[7C         [61;43H[0;7mM-M[m Mac Format[61;85H[0;7mM-P[m Prepend[61;127H[0;7m^T[m To Files[59;30H[?25l[59;96H[39;49m[m[1K [0;7m[ Wrote 194 lines ][m[K[43;8H[16B[J[1;202H[0;7m        [61;211H[m[61;1H[34h[?25h[?1049l[?1l>bryan@svrccom1:~/NodeServer$ sudo nano Server.js [3Pnodejs[C[C[C[C[C[C[C[C[C[C[C
Listening to port 8080
events.js:160
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::8080
    at Object.exports._errnoException (util.js:1018:11)
    at exports._exceptionWithHostPort (util.js:1041:20)
    at Server._listen2 (net.js:1258:14)
    at listen (net.js:1294:10)
    at Server.listen (net.js:1390:5)
    at EventEmitter.listen (/home/bryan/NodeServer/node_modules/express/lib/application.js:618:24)
    at Object.<anonymous> (/home/bryan/NodeServer/Server.js:193:5)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:390:7)
    at startup (bootstrap_node.js:150:9)
    at bootstrap_node.js:505:3
bryan@svrccom1:~/NodeServer$ nodejs Server.js [3@sudo nano[C[C[C[C[C[C[C[C[C[C[C
(B)0[?1049h[1;61r[m[4l[?1h=[?1h=[?1h=[39;49m[?25l[39;49m[m[H[J[59;98H[0;7m[ Reading File ][56A[m[59;97H[0;7m[ Read 194 lines ][56A[m[34h[?25h[H[39;49m[0;7m  GNU nano 2.5.3                                                          File: Server.js                                                                                                                          [3;1H[0m[32mvar[39m[m express = require([0;1m[33m"express"[39m[m);[1B[32mvar[39m[m app = express();[1B[32mvar[39m[m bodyParser = require([0;1m[33m"body-parser"[39m[m);[1B[32mvar[39m[m router = express.Router();[1B[32mvar[39m[m fs = require([0;1m[33m'fs'[39m[m);[2B[32mvar[39m[m mongoOp     =   require([0;1m[33m"./model/mongo"[39m[m);[2Bapp.use(bodyParser.json());[1Bapp.use(bodyParser.urlencoded({[0;1m[33m"extended"[39m[m: false}));[2B[0;1m[34m//Permissions to access server (CORS)[1B[39m[mapp.use([32mfunction[39m[m (req, res, next) {[16;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Origin'[39m[m, [0;1m[33m'http:[34m//localhost:8080');[18;5H[39m[mres.setHeader([0;1m[33m'Access-Control-Allow-Methods'[39m[m, [0;1m[33m'GET, POST, OPTIONS, PUT, PATCH, DELETE'[39m[m);[20;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Headers'[39m[m, [0;1m[33m'X-Requested-With, content-type'[39m[m);[22;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Credentials'[39m[m, true);[24;5Hnext();[1B});[2Brouter.get([0;1m[33m"/"[39m[m, [32mfunction[39m[m(req, res){[1B[0;1m[34m// res.json({"error": false, "message": "Hola chamacos!"});[1B[0m[32mvar[39m[m str = fs.readFileSync([0;1m[33m'./public/index.html'[35m,[33m'utf-8'[39m[m);[30;3Hres.send(str);[1B});[2B[0;1m[34m//route() will allow you to use same path for different HTTP operation.[1B//So if you have same URL but with different HTTP OP such as POST,GET etc[1B//Then use route() to remove redundant code.[3B[39m[mrouter.route([0;1m[33m"/admin"[39m[m)[39;5H.get([32mfunction[39m[m(req,res){[40;9H[32mvar[39m[m response = {};[41;9HmongoOp.find({},[32mfunction[39m[m(err,data){[42;9H[0;1m[34m// Mongo command to fetch all data from collection.[43;13H[33mif[39m[m(err) {[44;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[45;13H} [0;1m[33melse[39m[m {[46;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[47;13H}[1Bres.json(data);[49;9H});[50;5H})[1B.post([32mfunction[39m[m(req,res){[52;9H[32mvar[39m[m db = [0;1m[33mnew[39m[m mongoOp();[53;9H[32mvar[39m[m response = {};[54;9H[0;1m[34m// fetch email and password from REST request.[55;9H// Add strict validation when you use this in Production.[56;9H[39m[mdb.username = req.body.username;[57;9H[0;1m[34m// Hash the password using SHA1 algorithm.[58;9H[39m[mdb.password =  require([0;1m[33m'crypto'[39m[m)[2B[0;7m^G[m Get Help[6C[0;7m^O[m Write Out     [0;7m^W[m Where Is[6C[0;7m^K[m Cut Text[6C[0;7m^J[m Justify[7C[0;7m^C[m Cur Pos[7C[0;7m^Y[m Prev Page     [0;7mM-\[m First Line   [0;7mM-W[m WhereIs Next [0;7m^^[m Mark Text     [0;7mM-}[m Indent Text  [0;7mM-U[m Undo[1B[0;7m^X[m Exit[61;18H[0;7m^R[m Read File     [0;7m^\[m Replace[7C[0;7m^U[m Uncut Text    [0;7m^T[m To Spell[6C[0;7m^_[m Go To Line    [0;7m^V[m Next Page     [0;7mM-/[m Last Line    [0;7mM-][m To Bracket   [0;7mM-^[m Copy Text    [0;7mM-{[m Unindent Text[0;7mM-E[m Redo[58A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[38B[K[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;27H.createHash([0;1m[33m'sha1'[39m[m)[31;27H.update(req.body.password)[32;27H.digest([0;1m[33m'base64'[39m[m);[33;9Hdb.name = req.body.name;[34;9Hdb.save([32mfunction[39m[m(err){[35;9H[0;1m[34m// save() will run insert() command of MongoDB.[36;9H// it will add new data in collection.[37;13H[33mif[39m[m(err) {[38;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error adding data"[39m[m};[39;13H} [0;1m[33melse[39m[m {[40;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data added"[39m[m};[41;13H}[1Bres.json(response);[43;9H});[44;5H});[2Brouter.route([0;1m[33m"/admin/:id"[39m[m)[47;5H.get([32mfunction[39m[m(req,res){[48;9H[32mvar[39m[m response = {};[49;9HmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[50;9H[0;1m[34m// This will run Mongo Query to fetch data based on ID.[51;13H[33mif[39m[m(err) {[52;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[53;13H} [0;1m[33melse[39m[m {[54;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[55;13H}[1Bres.json(response);[57;5H})[1B})[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;5H.put([32mfunction[39m[m(req,res){[31;9H[32mvar[39m[m response = {};[32;9H[0;1m[34m// first find out record exists or not[33;9H// if it does then update the record[34;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[35;13H[0;1m[33mif[39m[m(err) {[36;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[37;13H} [0;1m[33melse[39m[m {[38;13H[0;1m[34m// we got data from Mongo.[39;13H// change it accordingly.[40;17H[33mif[39m[m(req.body.userEmail !== undefined) {[41;21H[0;1m[34m// case where email needs to be updated.[42;21H[39m[mdata.userEmail = req.body.userEmail;[43;17H}[1B[0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[45;21H[0;1m[34m// case where password needs to be updated[46;21H[39m[mdata.userPassword = req.body.userPassword;[47;17H}[1B[0;1m[34m// save the data[49;17H[39m[mdata.save([32mfunction[39m[m(err){[50;21H[0;1m[33mif[39m[m(err) {[51;25Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[52;21H} [0;1m[33melse[39m[m {[53;25Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[54;21H}[1Bres.json(response);[56;17H})[57;13H}[58;9H});[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[28;33r[28;1H[2L[1;61r[3;9H[0;1m[34m// first find out record exists or not[4;9H// if it does then update the record[5;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[6;9H    [0;1m[33mif[39m[m(err) {[K[7;16H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[8;13H} [0;1m[33melse[39m[m {[K[9;13H[0;1m[34m// we got data from Mongo.[39m[m[K[10;13H[0;1m[34m// change it accordingly.[11;17H[33mif[39m[m(req.body.userEmail !== undefined) {[K[12;20H[1K [0;1m[34m// case where email needs to be updated.[13;20H[39m[m[1K data.userEmail = req.body.userEmail;[14;16H[1K }[1B[1K [0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[16;21H[0;1m[34m// case where password needs to be updated[17;20H[39m[m[1K data.userPassword = req.body.userPassword;[18;16H[1K }[K[1B[1K [0;1m[34m// save the data[20;16H[39m[m[1K data.save([32mfunction[39m[m(err){[K[21;20H[1K [0;1m[33mif[39m[m(err) {[K[22;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[23;17H    } [0;1m[33melse[2C[39m[m[K[24;24H[1K response = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[25;17H    }[K[1B[1K res.json(response);[27;13H    })[K[28;13H}[29;9H});[2B    .[0;1m[33mdelete[39m[m([32mfunction[39m[m(req,res){[32;5H    [32mvar[39m[m response = {}; [33;9H[0;1m[34m// find the data[39m[m  [38;13H    [0;1m[34m// data exists, remove it.[39;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[40;17H    [0;1m[33mif[39m[m(err[25P[41;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[42;21H} [0;1m[33melse[39m[m {[K[43;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[44;17H    }[K[1Bres.json(response);[K[46;17H});[K[47;13H}[K[48;9H})[K[49;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[54;5H.get([32mfunction[39m[m(req,res){[55;9H[32mvar[39m[m response = {};[K[56;9HmongoOp.find({},[32mfunction[39m[m(err,data){[57;9H[0;1m[34m// Mongo command to fetch all data from collection.[58;9H[39m[m    [0;1m[33mif[39m[m(err) {[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[28;41r[28;1H[6L[1;61r[3;9H[32mvar[39m[m response = {};[K[4;12H[0;1m[34mfind the data[39m[m[K[9;13H    [0;1m[34m// data exists, remove it.[10;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[11;17H    [0;1m[33mif[39m[m(err[25P[12;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[13;21H} [0;1m[33melse[39m[m {[K[14;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[15;17H    }[K[1Bres.json(response);[K[17;17H});[K[18;13H}[K[19;9H})[K[20;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[25;5H.get([32mfunction[39m[m(req,res){[26;9H[32mvar[39m[m response = {};[K[27;9HmongoOp.find({},[32mfunction[39m[m(err,data){[28;9H[0;1m[34m// Mongo command to fetch all data from collection.[29;13H[33mif[39m[m(err) {[30;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[31;13H} [0;1m[33melse[39m[m {[32;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[33;13H}[1Bres.json(data);[3B[K[1Brouter.route([0;1m[33m"/reservas/:fecha/:horaEntrada"[39m[m)[39;9H.get([32mfunction[39m[m(req, res) {[40;16H[1K [32mvar[39m[m response = {};[K[41;13H    mongoOp.find( { fecha: req.params.fecha, horaEntrada: req.params.horaEntrada},[32mfunction[39m[m(err, data) {[42;17H[0;1m[34m//Mongo Query to fecth data based on Starting time.[43;17H[33mif[39m[m(err) {[K[44;21H    response = {[0;1m[33m"error"[39m[m: true, [0;1m[33m"message"[39m[m: [0;1m[33m"Error"[39m[m};[45;17H} [0;1m[33melse[39m[m {[K[1B[1K response = {[0;1m[33m"error"[39m[m: false, [0;1m[33m"message"[39m[m: data};[1B[47;13H    }[1B[1K res.json(response);[49;5H    })[1B});[1B[K[1Brouter.route([0;1m[33m"/reservas/:id/:horaEntrada/:fecha"[39m[m)[1B.put([32mfunction[39m[m(req,res){  [54;5H[32mvar[39m[m response = {};[K[55;5H[0;1m[34m// find the data[39m[m[K[56;5HmongoOp.find({ id: req.params.id, fecha: req.params.fecha, horaEntrada: req.params.horaEntrada },[32mfunction[39m[m(err,data){[57;9H[0;1m[33mif[39m[m(err) {[K[58;13Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[28A[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[3;59r[3;1H[29M[1;61r[30;9H} [0;1m[33melse[39m[m {[31;13H[0;1m[34m// data exists, remove it.[32;13H[39m[mdata.status = [0;1m[33m'Cancelado'[39m[m;[33;13H[0;1m[34m// save the data[34;17H[39m[mdata.save([32mfunction[39m[m(err){[35;21H[0;1m[33mif[39m[m(err) {[36;25Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[37;21H} [0;1m[33melse[39m[m {[38;25Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[39;21H}[1Bres.json(response);[41;17H});[42;9H}[43;5H});[1B})[4Bapp.use([0;1m[33m'/'[39m[m, router);[2Bapp.listen(8080);[1Bconsole.log([0;1m[33m"Listening to port 8080"[39m[m);[21A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1BMMMMMM                    }[1B                    res.j[41;20H[1;202H[0;7mModified[41;19H[m [18B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                                                                                                                                       [60;1H Y[m Yes[K[1B[0;7m N[m No  [61;17H[0;7m^C[m Cancel[K[59;62H[0;7mFile Name to Write: Server.js                               [1B^G[m Get Help[60;43H[0;7mM-D[m DOS Format[60;85H[0;7mM-A[m Append[60;127H[0;7mM-B[m Backup File[1B[0;7m^C[m Cancel[7C         [61;43H[0;7mM-M[m Mac Format[61;85H[0;7mM-P[m Prepend[61;127H[0;7m^T[m To Files[59;30H[?25l[59;96H[39;49m[m[1K [0;7m[ Wrote 194 lines ][m[K[41;19H[18B[J[1;202H[0;7m        [61;211H[m[61;1H[34h[?25h[?1049l[?1l>bryan@svrccom1:~/NodeServer$ sudo nano Server.js [3Pnodejs[C[C[C[C[C[C[C[C[C[C[C
Listening to port 8080
events.js:160
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::8080
    at Object.exports._errnoException (util.js:1018:11)
    at exports._exceptionWithHostPort (util.js:1041:20)
    at Server._listen2 (net.js:1258:14)
    at listen (net.js:1294:10)
    at Server.listen (net.js:1390:5)
    at EventEmitter.listen (/home/bryan/NodeServer/node_modules/express/lib/application.js:618:24)
    at Object.<anonymous> (/home/bryan/NodeServer/Server.js:193:5)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:390:7)
    at startup (bootstrap_node.js:150:9)
    at bootstrap_node.js:505:3
bryan@svrccom1:~/NodeServer$ fuse [Kr 8080/tcp
8080/tcp:            13639
bryan@svrccom1:~/NodeServer$ fuser -l[Kk 8080.t[K[K/tcp
8080/tcp:            13639
bryan@svrccom1:~/NodeServer$ fuser -k 8080/tcp[3P8080/tcpnodejs Server.js 
Listening to port 8080
^C
bryan@svrccom1:~/NodeServer$ sudo gdrive download -f router.route("/reservas")
bash: syntax error near unexpected token `('
bryan@svrccom1:~/NodeServer$     .get(function(req,res){
bash: syntax error near unexpected token `function'
bryan@svrccom1:~/NodeServer$         var response = {};
No command 'var' found, but there are 21 similar ones
var: command not found
bryan@svrccom1:~/NodeServer$         mongoOp.find({},function(err,data){
bash: syntax error near unexpected token `{},function'
bryan@svrccom1:~/NodeServer$         // Mongo command to fetch all data from col lection.
bash: //: Is a directory
bryan@svrccom1:~/NodeServer$             if(err) {
bash: syntax error near unexpected token `{'
bryan@svrccom1:~/NodeServer$                 response = {"error" : true,"message " : "Error fetching data"};
response: command not found
bryan@svrccom1:~/NodeServer$             } else {
bash: syntax error near unexpected token `}'
bryan@svrccom1:~/NodeServer$                 response = {"error" : false,"messag e" : data};
response: command not found
bryan@svrccom1:~/NodeServer$             }
bash: syntax error near unexpected token `}'
bryan@svrccom1:~/NodeServer$             res.json(data);
bash: syntax error near unexpected token `data'
bryan@svrccom1:~/NodeServer$         });
bash: syntax error near unexpected token `}'
bryan@svrccom1:~/NodeServer$     })[K[K[K[K[K[Ksudo gdrive list --query {[K"name contains 'Server [K'"
Id                             Name                           Type   Size      Created
0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU   Server.js                      bin    7.1 KB    2017-04-28 16:41:39
0B6RqmB4e_Z2kUVJ6SlZTNnBfS1k   Server.js                      bin    6.7 KB    2017-04-29 21:42:03
0B6RqmB4e_Z2kd2hoU1ZBcWhaTlk   serverGuarida                  dir              2017-04-28 17:16:56
0B6RqmB4e_Z2kTG1qYWpERVp0MVk   Server Cheat Sheet.docx        bin    13.6 KB   2017-04-27 18:54:02
0B6RqmB4e_Z2kamxJTnVkV005d2s   Server.js                      bin    658.0 B   2017-04-09 12:01:32
0B6RqmB4e_Z2keFU1M1lGLUxUYmM   server.js                      bin    30.2 KB   2017-04-09 12:12:26
0B6RqmB4e_Z2kaDVlYzZQWlF3T1U   server.js                      bin    16.9 KB   2017-04-09 12:10:02
0B6RqmB4e_Z2kSVMyN1dRSF9YeVk   server                         dir              2017-04-09 12:01:05
0ByiVUjlXXX0mVjFCQWhOU1VZcDA   hhvm-server.ini                bin    284.0 B   2017-03-15 22:12:38
0ByiVUjlXXX0mUTF3Z2VjdDNVU2s   server.php                     bin    800.0 B   2017-03-15 22:12:38
0ByiVUjlXXX0mOHpjVFZEOThZUEU   hhvm-server.ini                bin    284.0 B   2017-03-15 22:12:31
0ByiVUjlXXX0mNHlZTUpEdTJLbkE   ServerErrorHttpException.php   bin    769.0 B   2017-03-15 22:01:11
0ByiVUjlXXX0mOFBXdmdKck0tTFk   ServerRequestInterface.php     bin    10.1 KB   2017-03-15 21:58:03
0ByiVUjlXXX0mc1pKX0NDSDFQVTA   ServerRequest.php              bin    9.4 KB    2017-03-15 21:57:34
bryan@svrccom1:~/NodeServer$ ^C
bryan@svrccom1:~/NodeServer$ sudo gdrive list --query "name contains 'Server'"download -f router.route("/reservas")[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU
Downloading Server.js -> Server.js
                                                  7.1 KB                                                  7.1 KB                                                  Downloaded 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU at 7.1 KB/s, total 7.1 KB
bryan@svrccom1:~/NodeServer$ nodejs Server.js 
Listening to port 8080
^C
bryan@svrccom1:~/NodeServer$ nodejs Server.js sudo gdrive download -f 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU
Downloading Server.js -> Server.js
                                                  7.1 KB                                                  7.1 KB                                                  Downloaded 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU at 7.1 KB/s, total 7.1 KB
bryan@svrccom1:~/NodeServer$ sudo gdrive download -f 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnodejs Server.js [K
Listening to port 8080
^C
bryan@svrccom1:~/NodeServer$ nodejs Server.js sudo gdrive download -f 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU
Downloading Server.js -> Server.js
                                                  7.1 KB                                                  7.1 KB                                                  Downloaded 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU at 7.1 KB/s, total 7.1 KB
bryan@svrccom1:~/NodeServer$ sudo gdrive download -f 0B6RqmB4e_Z2kT0wzZ3hvcFVHTFU[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnodejs Server.js [K
Listening to port 8080
^C
bryan@svrccom1:~/NodeServer$ nodejs Server.js [Ksudo nano Server.js 
(B)0[?1049h[1;61r[m[4l[?1h=[?1h=[?1h=[39;49m[?25l[39;49m[m[H[J[59;98H[0;7m[ Reading File ][56A[m[59;97H[0;7m[ Read 207 lines ][56A[m[34h[?25h[H[39;49m[0;7m  GNU nano 2.5.3                                                          File: Server.js                                                                                                                          [3;1H[0m[32mvar[39m[m express = require([0;1m[33m"express"[39m[m);[1B[32mvar[39m[m app = express();[1B[32mvar[39m[m bodyParser = require([0;1m[33m"body-parser"[39m[m);[1B[32mvar[39m[m router = express.Router();[1B[32mvar[39m[m fs = require([0;1m[33m'fs'[39m[m);[2B[32mvar[39m[m mongoOp     =   require([0;1m[33m"./model/mongo"[39m[m);[2Bapp.use(bodyParser.json());[1Bapp.use(bodyParser.urlencoded({[0;1m[33m"extended"[39m[m: false}));[2B[0;1m[34m//Permissions to access server (CORS)[1B[39m[mapp.use([32mfunction[39m[m (req, res, next) {[16;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Origin'[39m[m, [0;1m[33m'http:[34m//localhost:8080');[18;5H[39m[mres.setHeader([0;1m[33m'Access-Control-Allow-Methods'[39m[m, [0;1m[33m'GET, POST, OPTIONS, PUT, PATCH, DELETE'[39m[m);[20;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Headers'[39m[m, [0;1m[33m'X-Requested-With, content-type'[39m[m);[22;5Hres.setHeader([0;1m[33m'Access-Control-Allow-Credentials'[39m[m, true);[24;5Hnext();[1B});[2Brouter.get([0;1m[33m"/"[39m[m, [32mfunction[39m[m(req, res){[1B[0;1m[34m// res.json({"error": false, "message": "Hola chamacos!"});[1B[0m[32mvar[39m[m str = fs.readFileSync([0;1m[33m'./public/index.html'[35m,[33m'utf-8'[39m[m);[30;3Hres.send(str);[1B});[2B[0;1m[34m//route() will allow you to use same path for different HTTP operation.[1B//So if you have same URL but with different HTTP OP such as POST,GET etc[1B//Then use route() to remove redundant code.[3B[39m[mrouter.route([0;1m[33m"/admin"[39m[m)[39;5H.get([32mfunction[39m[m(req,res){[40;9H[32mvar[39m[m response = {};[41;9HmongoOp.find({},[32mfunction[39m[m(err,data){[42;9H[0;1m[34m// Mongo command to fetch all data from collection.[43;13H[33mif[39m[m(err) {[44;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[45;13H} [0;1m[33melse[39m[m {[46;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[47;13H}[1Bres.json(data);[49;9H});[50;5H})[1B.post([32mfunction[39m[m(req,res){[52;9H[32mvar[39m[m db = [0;1m[33mnew[39m[m mongoOp();[53;9H[32mvar[39m[m response = {};[54;9H[0;1m[34m// fetch email and password from REST request.[55;9H// Add strict validation when you use this in Production.[56;9H[39m[mdb.username = req.body.username;[57;9H[0;1m[34m// Hash the password using SHA1 algorithm.[58;9H[39m[mdb.password =  require([0;1m[33m'crypto'[39m[m)[2B[0;7m^G[m Get Help[6C[0;7m^O[m Write Out     [0;7m^W[m Where Is[6C[0;7m^K[m Cut Text[6C[0;7m^J[m Justify[7C[0;7m^C[m Cur Pos[7C[0;7m^Y[m Prev Page     [0;7mM-\[m First Line   [0;7mM-W[m WhereIs Next [0;7m^^[m Mark Text     [0;7mM-}[m Indent Text  [0;7mM-U[m Undo[1B[0;7m^X[m Exit[61;18H[0;7m^R[m Read File     [0;7m^\[m Replace[7C[0;7m^U[m Uncut Text    [0;7m^T[m To Spell[6C[0;7m^_[m Go To Line    [0;7m^V[m Next Page     [0;7mM-/[m Last Line    [0;7mM-][m To Bracket   [0;7mM-^[m Copy Text    [0;7mM-{[m Unindent Text[0;7mM-E[m Redo[58A[1BM[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[33B[K[32A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;27H.createHash([0;1m[33m'sha1'[39m[m)[31;27H.update(req.body.password)[32;27H.digest([0;1m[33m'base64'[39m[m);[33;9Hdb.name = req.body.name;[34;9Hdb.save([32mfunction[39m[m(err){[35;9H[0;1m[34m// save() will run insert() command of MongoDB.[36;9H// it will add new data in collection.[37;13H[33mif[39m[m(err) {[38;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error adding data"[39m[m};[39;13H} [0;1m[33melse[39m[m {[40;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data added"[39m[m};[41;13H}[1Bres.json(response);[43;9H});[44;5H});[2Brouter.route([0;1m[33m"/admin/:id"[39m[m)[47;5H.get([32mfunction[39m[m(req,res){[48;9H[32mvar[39m[m response = {};[49;9HmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[50;9H[0;1m[34m// This will run Mongo Query to fetch data based on ID.[51;13H[33mif[39m[m(err) {[52;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[53;13H} [0;1m[33melse[39m[m {[54;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[55;13H}[1Bres.json(response);[57;5H})[1B})[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2;59r[2;1H[29M[1;61r[2;1H[K[30;5H.put([32mfunction[39m[m(req,res){[31;9H[32mvar[39m[m response = {};[32;9H[0;1m[34m// first find out record exists or not[33;9H// if it does then update the record[34;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[35;13H[0;1m[33mif[39m[m(err) {[36;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[37;13H} [0;1m[33melse[39m[m {[38;13H[0;1m[34m// we got data from Mongo.[39;13H// change it accordingly.[40;17H[33mif[39m[m(req.body.userEmail !== undefined) {[41;21H[0;1m[34m// case where email needs to be updated.[42;21H[39m[mdata.userEmail = req.body.userEmail;[43;17H}[1B[0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[45;21H[0;1m[34m// case where password needs to be updated[46;21H[39m[mdata.userPassword = req.body.userPassword;[47;17H}[1B[0;1m[34m// save the data[49;17H[39m[mdata.save([32mfunction[39m[m(err){[50;21H[0;1m[33mif[39m[m(err) {[51;25Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[52;21H} [0;1m[33melse[39m[m {[53;25Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[54;21H}[1Bres.json(response);[56;17H})[57;13H}[58;9H});[28A[3B[1B[1B[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2B[2B[1B[1B[1B[28;33r[28;1H[2L[1;61r[3;9H[0;1m[34m// first find out record exists or not[4;9H// if it does then update the record[5;9H[39m[mmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[6;9H    [0;1m[33mif[39m[m(err) {[K[7;16H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[8;13H} [0;1m[33melse[39m[m {[K[9;13H[0;1m[34m// we got data from Mongo.[39m[m[K[10;13H[0;1m[34m// change it accordingly.[11;17H[33mif[39m[m(req.body.userEmail !== undefined) {[K[12;20H[1K [0;1m[34m// case where email needs to be updated.[13;20H[39m[m[1K data.userEmail = req.body.userEmail;[14;16H[1K }[1B[1K [0;1m[33mif[39m[m(req.body.userPassword !== undefined) {[16;21H[0;1m[34m// case where password needs to be updated[17;20H[39m[m[1K data.userPassword = req.body.userPassword;[18;16H[1K }[K[1B[1K [0;1m[34m// save the data[20;16H[39m[m[1K data.save([32mfunction[39m[m(err){[K[21;20H[1K [0;1m[33mif[39m[m(err) {[K[22;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error updating data"[39m[m};[23;17H    } [0;1m[33melse[2C[39m[m[K[24;24H[1K response = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : [0;1m[33m"Data is updated for "[39m[m+req.params.id};[25;17H    }[K[1B[1K res.json(response);[27;13H    })[K[28;13H}[29;9H});[2B    .[0;1m[33mdelete[39m[m([32mfunction[39m[m(req,res){[32;5H    [32mvar[39m[m response = {}; [33;9H[0;1m[34m// find the data[39m[m  [38;13H    [0;1m[34m// data exists, remove it.[39;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[40;17H    [0;1m[33mif[39m[m(err[25P[41;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[42;21H} [0;1m[33melse[39m[m {[K[43;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[44;17H    }[K[1Bres.json(response);[K[46;17H});[K[47;13H}[K[48;9H})[K[49;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[54;5H.get([32mfunction[39m[m(req,res){[55;9H[32mvar[39m[m response = {};[K[56;9HmongoOp.find({},[32mfunction[39m[m(err,data){[57;9H[0;1m[34m// Mongo command to fetch all data from collection.[58;9H[39m[m    [0;1m[33mif[39m[m(err) {[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[2B[1B[1B[1B[1B[1B[1B[1B[1B[28;41r[28;1H[6L[1;61r[3;9H[32mvar[39m[m response = {};[K[4;12H[0;1m[34mfind the data[39m[m[K[9;13H    [0;1m[34m// data exists, remove it.[10;13H[39m[m    mongoOp.remove({_id : req.params.id},[32mfunction[39m[m(err){[11;17H    [0;1m[33mif[39m[m(err[25P[12;21H    response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error deleting data"[39m[m};[13;21H} [0;1m[33melse[39m[m {[K[14;24H[1K response = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Data associated with "[39m[m+req.params.id+[0;1m[33m"is deleted"[39m[m};[15;17H    }[K[1Bres.json(response);[K[17;17H});[K[18;13H}[K[19;9H})[K[20;5H});[K[1B[K[1B[0;1m[34m//GETS FOR RESERVES[39m[m[K[1B[K[1Brouter.route([0;1m[33m"/reservas"[39m[m)[K[25;5H.get([32mfunction[39m[m(req,res){[26;9H[32mvar[39m[m response = {};[K[27;9HmongoOp.find({},[32mfunction[39m[m(err,data){[28;9H[0;1m[34m// Mongo command to fetch all data from collection.[29;13H[33mif[39m[m(err) {[30;17Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[31;13H} [0;1m[33melse[39m[m {[32;17Hresponse = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[33;13H}[1Bres.json(data);[3B[K[38;5Hrouter.route([0;1m[33m"/reservas/:id"[39m[m)[39;9H.get([32mfunction[39m[m(req,res){[40;9H    [32mvar[39m[m response = {};[K[41;13HmongoOp.findById(req.params.id,[32mfunction[39m[m(err,data){[42;13H[0;1m[34m// Mongo command to fetch all data from collection.[43;17H[33mif[39m[m(err) {[K[44;21Hresponse = {[0;1m[33m"error"[39m[m : true,[0;1m[33m"message"[39m[m : [0;1m[33m"Error fetching data"[39m[m};[45;17H} [0;1m[33melse[39m[m {[K[46;17H    response = {[0;1m[33m"error"[39m[m : false,[0;1m[33m"message"[39m[m : data};[1B[47;13H    }[1B[1K res.json(data);[49;12H[1K });[50;9H})[1B[K[1Brouter.route([0;1m[33m"/reservas/:fecha/:horaEntrada"[39m[m)[53;8H[1K .get([32mfunction[39m[m(req, res) {[54;16H[1K [32mvar[39m[m response = {};[55;16H[1K mongoOp.find( { fecha: req.params.fecha, horaEntrada: req.params.horaEntrada},[32mfunction[39m[m(err, data) {[56;16H[1K [0;1m[34m//Mongo Query to fecth data based on Starting time.[57;16H[39m[m[1K [0;1m[33mif[39m[m(err) {[K[1B[1K response = {[0;1m[33m"error"[39m[m: true, [0;1m[33m"message"[39m[m: [0;1m[33m"Error"[39m[m};[28A[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1B[1BMMMMM            mongoOp.findById[1;202H[0;7mModified[41;28H[m[1P[1P[1P[1P(req{req.params.id,[32mfunction[39m[m(err,data){[41;27Hireq.params.id,[32mfunction[39m[m(err,data){[41;28Hdreq.params.id,[32mfunction[39m[m(err,data){[41;29H:req.params.id,[32mfunction[39m[m(err,data){[41;30H req.params.id,[32mfunction[39m[m(err,data){[41;31Hreq.params.id},[32mfunction[39m[m(err,data){[41;45H[18B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                                                                                                                                       [60;1H Y[m Yes[K[1B[0;7m N[m No  [61;17H[0;7m^C[m Cancel[K[59;62H[0;7mFile Name to Write: Server.js                               [1B^G[m Get Help[60;43H[0;7mM-D[m DOS Format[60;85H[0;7mM-A[m Append[60;127H[0;7mM-B[m Backup File[1B[0;7m^C[m Cancel[7C         [61;43H[0;7mM-M[m Mac Format[61;85H[0;7mM-P[m Prepend[61;127H[0;7m^T[m To Files[59;30H[?25l[59;96H[39;49m[m[1K [0;7m[ Wrote 207 lines ][m[K[41;45H[18B[J[1;202H[0;7m        [61;211H[m[61;1H[34h[?25h[?1049l[?1l>bryan@svrccom1:~/NodeServer$ sudo nano Server.js [3Pnodejs[C[C[C[C[C[C[C[C[C[C[C
Listening to port 8080
^C
bryan@svrccom1:~/NodeServer$ fuser 8080/tcp
bryan@svrccom1:~/NodeServer$ txum
txum: command not found
bryan@svrccom1:~/NodeServer$ t[Ktmux
[?1049h[m[?1l>[H[J[34h[?25h[?1000l[?1002l[?1006l[?1005l[?25l[1;1H[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[30m[42m[2] 0:bash*                                                                                                                                                                              "svrccom1" 01:08 14-Jun-17[m[61;1H[1;61r[H[34h[?25h[1;60rbryan@svrccom1:~/NodeServer$ [1;61r[H[29C[1;60r[H[29Cn[1;61r[H[30C[1;60r[H[30Co[1;61r[H[31C[1;60r[H[31Cd[1;61r[H[32C[1;60r[H[32Ce[1;61r[H[33C[1;60r[H[33Cj[1;61r[H[34C[1;60r[H[34Cs[1;61r[H[35C[1;60r[H[35C [1;61r[H[36C[1;60r[H[36CS[1;61r[H[37C[1;60r[H[37Ce[1;61r[H[38C[1;60r[H[38Cr[1;61r[H[39C[1;60r[H[39Cv[1;61r[H[40C[1;60r[H[40Ce[1;61r[H[41C[1;60r[H[41Cr[1;61r[H[42C[1;60r[H[42C.[1;61r[H[43C[1;60r[H[43Cj[1;61r[H[44C[1;60r[H[44Cs[1;61r[H[45C
[1;60r[H
Listening to port 8080[?25l[61;1H[30m[42m[2] 0:nodejs*                                                                                                                                                                            "svrccom1" 01:08 14-Jun-17[m[61;1H[1;61r[H[2B[34h[?25h[1;60r[H[2Bd[1;61r[H[3;2H[1;60r[H[2B [1;61r[H[2B[1;61r[m[?1l>[H[J[34h[?25h[?1000l[?1002l[?1006l[?1005l[?1049l[detached (from session 2)]
bryan@svrccom1:~/NodeServer$ 